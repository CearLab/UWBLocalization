
classdef DWRanging < ros.Message
    %DWRanging MATLAB implementation of rosmsgs/DWRanging
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'rosmsgs/DWRanging' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '9c822fd6a75d14f97f7679d0a373d617' % The MD5 Checksum of the message definition
        PropertyList = { 'AnchorId' 'TagId' 'Range' 'Rawrange' 'Seq' 'MaxNoise' 'StdNoise' 'FirstPathAmp1' 'FirstPathAmp2' 'FirstPathAmp3' 'MaxGrowthCIR' 'RxPreamCount' 'FirstPath' 'Channel' 'Prf' 'Datarate' 'PreambleLength' 'PacSize' } % List of non-constant message properties
        ROSPropertyList = { 'anchorId' 'tagId' 'range' 'rawrange' 'seq' 'maxNoise' 'stdNoise' 'firstPathAmp1' 'firstPathAmp2' 'firstPathAmp3' 'maxGrowthCIR' 'rxPreamCount' 'firstPath' 'channel' 'prf' 'datarate' 'preambleLength' 'pacSize' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        AnchorId
        TagId
        Range
        Rawrange
        Seq
        MaxNoise
        StdNoise
        FirstPathAmp1
        FirstPathAmp2
        FirstPathAmp3
        MaxGrowthCIR
        RxPreamCount
        FirstPath
        Channel
        Prf
        Datarate
        PreambleLength
        PacSize
    end
    methods
        function set.AnchorId(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'AnchorId');
            obj.AnchorId = int16(val);
        end
        function set.TagId(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'TagId');
            obj.TagId = int16(val);
        end
        function set.Range(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'Range');
            obj.Range = int32(val);
        end
        function set.Rawrange(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'Rawrange');
            obj.Rawrange = int32(val);
        end
        function set.Seq(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'Seq');
            obj.Seq = int32(val);
        end
        function set.MaxNoise(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'MaxNoise');
            obj.MaxNoise = int32(val);
        end
        function set.StdNoise(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'StdNoise');
            obj.StdNoise = int32(val);
        end
        function set.FirstPathAmp1(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'FirstPathAmp1');
            obj.FirstPathAmp1 = int32(val);
        end
        function set.FirstPathAmp2(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'FirstPathAmp2');
            obj.FirstPathAmp2 = int32(val);
        end
        function set.FirstPathAmp3(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'FirstPathAmp3');
            obj.FirstPathAmp3 = int32(val);
        end
        function set.MaxGrowthCIR(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'MaxGrowthCIR');
            obj.MaxGrowthCIR = int32(val);
        end
        function set.RxPreamCount(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'RxPreamCount');
            obj.RxPreamCount = int32(val);
        end
        function set.FirstPath(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'FirstPath');
            obj.FirstPath = int32(val);
        end
        function set.Channel(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'Channel');
            obj.Channel = double(val);
        end
        function set.Prf(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'Prf');
            obj.Prf = int32(val);
        end
        function set.Datarate(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'Datarate');
            obj.Datarate = double(val);
        end
        function set.PreambleLength(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'PreambleLength');
            obj.PreambleLength = int32(val);
        end
        function set.PacSize(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DWRanging', 'PacSize');
            obj.PacSize = int32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.rosmsgs.DWRanging.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.rosmsgs.DWRanging(strObj);
        end
    end
end
