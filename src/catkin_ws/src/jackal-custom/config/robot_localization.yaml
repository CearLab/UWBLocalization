#Configuation for robot odometry EKF

## SOME USEFUL INFO ###
# DIFFERENTIAL PARAMETER
# For each of the sensor messages defined above that contain pose information, 
# users can specify whether the pose variables should be integrated differentially. 
# If a given value is set to true, then for a measurement at time t
# from the sensor in question, we first subtract the measurement at time t-1, 
# and convert the resulting value to a velocity. 
# This setting is especially useful if your robot has two sources of absolute 
# pose information, e.g., yaw measurements from odometry and an IMU. 
# In that case, if the variances on the input sources are not configured correctly, 
# these measurements may get out of sync with one another and cause oscillations 
# in the filter, but by integrating one or both of them differentially, we avoid this scenario.

# USE_CONTROL PARAMETER
# If true, the state estimation node will listen to the cmd_vel topic for a 
# geometry_msgs/Twist message, and use that to generate an acceleration term. 
# This term is then used in the robot's state prediction. 
# This is especially useful in situations where even small amounts of lag in 
# convergence for a given state variable cause problems in your application 
# (e.g., LIDAR shifting during rotations). Defaults to false.

# CONTROL_CONFIG PARAMETER
# Controls which variables in the cmd_vel message are used in state prediction. 
# (usual order)

# ACCELERATION_LIMITS
# How rapidly your robot can accelerate for each dimension. 
# Matches the parameter order in control_config. 
# Only used if use_control is set to true.

# ACCELERATION_GAINS
# If your robot cannot instantaneously reach its acceleration limit, 
# the permitted change can be controlled with these gains. 
# Only used if use_control is set to true.

# DYNAMIC_PROCESS_NOISE_COVARIANCE
# If true, will dynamically scale the process_noise_covariance 
# based on the robot’s velocity. This is useful, e.g., when you 
# want your robot’s estimate error covariance to stop growing 
# when the robot is stationary. Defaults to false.

# PREDICT_TO_CURRENT_TIME
# If set to true, the filter predicts and corrects up to the time 
# of the latest measurement (by default) but will now also predict 
# up to the current time step.

###################################
######## START THE CONFIG #########
###################################

## frames ##
odom_frame: odom
base_link_frame: base_link
world_frame: world
map_frame: world

## CONTROL ##
use_control: true
control_config: [true, true, true,
                 true, true, true]


# general stuff
print_diagnostics: true
debug: true
#debug_out_file: /home/ros/workspace/catkin_ws/src/jackal-custom/log/ekf.log
frequency: 50
dynamic_process_noise_covariance: false
predict_to_current_time: true
transform_time_offset: 1
use_imu_yaw: false
publish_acceleration: true
sensor_timeout: 0.1
two_d_mode: false
tf: true
    
### SENSORS ###
#odom0: /ground_truth/state
#odom0_config: [false, false, false,
#               false, false, false,
#               true,  true,  true,
#               false, false, false,
#               false, false, false]
#odom0_differential: false

odom0: /HYB5/Odom
odom0_config: [true, true, true,
               false, false, false,
               true, true, true,
               false, false, false,
               false, false, false]
odom0_config_variance: [0.20, 0.20, 0.20,
                        0.00, 0.00, 0.00,
                        0.05, 0.05, 0.05,
                        0.00, 0.00, 0.00,
                        0.00, 0.00, 0.00]
odom0_differential: false

imu0: /imu/data
imu0_config: [false, false, false,
              true,  true,  true,
              false, false, false,
              false, false, false,
              true,  true,  true]
imu0_differential: false
imu0_remove_gravitational_acceleration: true

# initial state
initial_state: [0.0, 0.0, 0.0
                0.0, 0.0, 0.0,
                0.0, 0.0, 0.0,
                0.0, 0.0, 0.0,
                0.0, 0.0, 0.0]

# process covariance gains
#                         x      y     z     R     P     Y     xdot  ydot  zdot    Rdot  Pdot  Ydot  xddot yddot zddot  
process_noise_covariance: [1e-1, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    1e-1, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    1e-1, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    1e-1, 0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    1e-1, 0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    1e-1, 0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    1e-2,  0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     1e-2,  0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     1e-2, 0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    1e-2, 0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    1e-2, 0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    1e-2, 0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    1e-4, 0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    1e-4, 0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    1e-4]


# initial estimated covariance
#                             x     y     z     R     P     Y     xdot  ydot  zdot   Rdot  Pdot  Ydot  xddot yddot zddot  
initial_estimate_covariance: [1e-9, 0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    1e-9, 0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    1e-9, 0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    1e-9, 0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    1e-9, 0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    1e-9, 0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    1e-9, 0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    1e-9, 0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    1e-9,  0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1e-9,  0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1e-9,  0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1e-9, 0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1e-9, 0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1e-9]

