<launch>
  <arg name="ns" default="" />

  <arg name="x" default="0" />
  <arg name="y" default="0" />
  <arg name="z" default="0" />
  <arg name="yaw" default="0" />
  <arg name="joystick" default="true" />
  <arg name="joy_dev" default="/dev/input/ps4" />

  <arg name="right_id" default="0" />
  <arg name="left_id" default="1" />
  <arg name="rear_id" default="2" />

  <arg name="robot_name" default="jackal"/>

  <!-- params and args for jackal_op -->
  <arg name="topicroot" default="" />
  <arg name="ID" default="" />
  <arg name="SubT" default="/gtec/toa/ranging" />   
  
  <!-- Configuration of Jackal which you would like to simulate.
       See jackal_description for details. -->
  <arg name="config" default="base" />
  <arg name="PI" default="3.1415926535897931"/>

  <group ns="frames"> 

    <!-- TF -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="world_baseLink" args="0 0 0 0 0 0 world base_link"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="baseLink_imuLink" args="0 0 0 0 0 0 base_link imu_link"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="baseLink_rightTag" args="0 -0.161786 0.184 0 0 0 base_link right_tag"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="baseLink_leftTag" args="0 0.161786 0.184 0 0 0 base_link left_tag"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="baseLink_rearTag" args="-0.5 0 0.184 0 0 0 base_link rear_tag"/>

  </group>

  <group ns="$(arg ns)">

    <!-- Load Jackal's description, controllers, and teleop nodes. -->
    <arg name="env_runner" value="$(eval 'env_run' if not optenv('OS', 'unknown').lower().startswith('windows') else 'env_run.bat')" />
    <param name="robot_description"
         command="$(find jackal_description)/scripts/$(arg env_runner)
                    $(find jackal_description)/urdf/configs/$(arg config)
                    $(find xacro)/xacro $(find jackal-custom)/urdf/jackal_custom/custom_jackal.urdf.xacro right_id:=$(arg right_id) left_id:=$(arg left_id)
                    --inorder" />

    <!-- Control node  -->
    <include file="$(find jackal-custom)/launch/control/control.launch">
      <arg name="enable_ekf" value="false" />
    </include>

    <!-- Teleop node  -->
    <include file="$(find jackal-custom)/launch/control/teleop.launch">
      <arg name="joystick" value="$(arg joystick)" />
      <arg name="joy_dev" value="$(arg joy_dev)" />
    </include>

    <!-- Spawn Jackal -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
                args="-urdf -model jackal -param robot_description -x $(arg x) -y $(arg y) -z $(arg z) -R 0 -P 0 -Y $(arg yaw)" />

  </group>


  <!-- True Distance measurement node  -->
  <!--node name="MeshTrue" pkg="jackal_op" type="jack_disttrue" args="MeshTrue">
    <rosparam command="load" file="$(find jackal_op)/config/jackal_op_disttrue.yaml"/>
  </node-->

  <!-- True Distance handler node -->
  <!--node name="DT7" pkg="jackal_op" type="jack_disthandle" args="7">
    <rosparam command="load" file="$(find jackal_op)/config/jackal_op_disthandle_T7.yaml"/>
  </node-->

  <!-- T0 (rear) Distance handler node -->
  <!--node name="DT0" pkg="jackal_op" type="jack_disthandle" args="0">
    <rosparam command="load" file="$(find jackal_op)/config/jackal_op_disthandle_T0.yaml"/>
  </node-->

</launch>